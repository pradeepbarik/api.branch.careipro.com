import { Schema, model } from "mongoose";
import { coll_appointments } from './collections';
const appointmentSchema = new Schema({
    appointment_id: { type: Number, index: true, unique: true },
    branch_id: { type: Number },
    clinic_id: { type: Number, index: true },
    doctor_id: { type: Number, index: true },
    service_loc_id: { type: Number },
    today_booking_id: { type: String },
    user_id: { type: Number, index: true },
    user_type: { type: String, index: true },
    display_order: { type: String },
    patient_name: { type: String },
    patient_mobile: { type: String, index: true },
    patient_email: { type: String },
    patient_address: { type: String },
    patient_age: { type: Number, index: true },
    patient_gender: { type: String, index: true },
    booked_through: { type: String },
    booking_charge: { type: Number },
    doctor_fee_type: { type: Number },
    service_charge: { type: Number },
    total_amount: { type: Number },
    booking_time: { type: Date },
    consult_date: { type: Date, index: true },
    consult_year: { type: Number },
    consult_month: { type: Number },
    consult_day: { type: Number },
    expired_time: { type: Date },
    status: { type: String, index: true },
    payment_status: { type: String },
    payment_method: { type: String },
    cancelled_time: { type: Date },
    is_auto_filled: { type: Number },
    ask_for_feedback: { type: Number },
    slno_group: { type: Number },
    vertical: { type: String },
    case_id: { type: Number, index: true },
    patient_paid_amount: { type: Number },
    prescription: [String],
    rating: { type: Number },
    rating_given_time: { type: Date },
    review_score: { type: Number },
    review: {
        review_given_time: { type: Date },
        review_text: { type: String },
        visited_for: { type: String },
        review_tags: [{
            _id: false,
            tag: { type: String },
            score: { type: Number },
            topic: { type: String },
            sub_topic: { type: String }
        }]
    },
    logs: { type: Schema.Types.Mixed },
})
const appointmentsModel = model(coll_appointments, appointmentSchema);
export default appointmentsModel;