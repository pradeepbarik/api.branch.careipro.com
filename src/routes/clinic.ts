import {Router} from 'express';
import {apiRateLimit,handelError,employeeValidation,checkUnderBranch,parseFormData} from '../middleware';
import clinicController from '../controller/clinic';
const clinicRoutes=Router();
clinicRoutes.get('/login-token',[apiRateLimit(2,20),employeeValidation(1),checkUnderBranch],handelError(clinicController.getLoginToken));
clinicRoutes.get('/seo-url-availability-check',[apiRateLimit(5,20)],handelError(clinicController.checkClinicSeourlAvailability));
clinicRoutes.get('/mobile-unique-check',[apiRateLimit(5,20)],handelError(clinicController.checkClinicMobileUnique));
clinicRoutes.get('/username-unique-check',[apiRateLimit(5,20)],handelError(clinicController.checkClinicloginUserNameUnique));
clinicRoutes.post('/add-new-clinic',[apiRateLimit(1,4),employeeValidation(1)],handelError(clinicController.addNewClinic));
clinicRoutes.get('/clinic-list',[apiRateLimit(1,4)],handelError(clinicController.getClinicList));
clinicRoutes.get('/clinic-detail',[apiRateLimit(10,20)],handelError(clinicController.getClinicDetail));
clinicRoutes.post('/clinic-detail',[apiRateLimit(1,5),employeeValidation(1),checkUnderBranch],handelError(clinicController.saveClinicDetail));
clinicRoutes.post('/clinic-timing',[apiRateLimit(1,5),employeeValidation(1)],handelError(clinicController.saveClinicTiming));
clinicRoutes.post('/clinic-logo-update',[apiRateLimit(1,5),parseFormData],handelError(clinicController.updateClinicLogo));
clinicRoutes.get('/get-doctors-list',[apiRateLimit(1,4)],handelError(clinicController.getDoctorsList));
clinicRoutes.get('/get-doctors-for-drop-down',[apiRateLimit(30,60)],handelError(clinicController.getDoctorsForDropDown));
clinicRoutes.get('/doctor-complete-details',[apiRateLimit(1,3)],handelError(clinicController.doctorCompleteDetails));
clinicRoutes.get('/doctor-info',[apiRateLimit(30,60)],handelError(clinicController.getDoctorinfo));
clinicRoutes.post('/save-doctor-info',[apiRateLimit(10,60)],handelError(clinicController.saveDoctorInfo))
clinicRoutes.post('/update-doctor-profile-pic',[apiRateLimit(1,5),parseFormData],handelError(clinicController.updateDoctorProfilePic));
clinicRoutes.post('/approve-doctor',[apiRateLimit(1,3),employeeValidation(1)],handelError(clinicController.approveDoctor));
clinicRoutes.post('/change-doctor-active-status',[apiRateLimit(1,3),employeeValidation(1)],handelError(clinicController.changeDoctorActiveStatus));
clinicRoutes.get('/clinic-banners',[apiRateLimit(1,3)],handelError(clinicController.clinicBanners));
clinicRoutes.post('/upload-clinic-banner',[apiRateLimit(1,5),parseFormData],handelError(clinicController.uploadClinicBanner));
clinicRoutes.get('/clinic-specialization',[apiRateLimit(30,30)],handelError(clinicController.clinicSpecializations));
clinicRoutes.post('/clinic-specialization',[apiRateLimit(1,3),employeeValidation(1),checkUnderBranch],handelError(clinicController.updateClinicSpecialization));
clinicRoutes.get('/get-clinic-staffs',[apiRateLimit(1,3)],handelError(clinicController.getClinicStaffs));
clinicRoutes.post('/add-clinic-staff',[apiRateLimit(1,10)],handelError(clinicController.addClinicStaff));
export default clinicRoutes;
